{"version":3,"sources":["components/PostListItem/PostListItem.js","api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsListItem","props","post","title","userId","id","setSelectedPostId","selectedPostId","useState","isClicked","setIsClicked","type","className","cn","active","onClick","defaultProps","request","url","options","fetch","then","res","ok","Error","status","json","getUserPosts","data","filter","Number","PostsList","posts","setPosts","useEffect","length","map","item","key","NewCommentForm","name","placeholder","PostDetails","setPost","comments","setComments","isShownComments","setIsShownComments","postId","comment","getPostComments","current","body","App","setUserId","onChange","e","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91783627.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const PostsListItem = (props) => {\n  const {\n    post: { title, userId, id },\n    setSelectedPostId,\n    selectedPostId,\n  } = props;\n  const [isClicked, setIsClicked] = useState(false);\n\n  const onClick = () => {\n    if (isClicked) {\n      setIsClicked(false);\n      setSelectedPostId(0);\n    } else {\n      setIsClicked(true);\n      setSelectedPostId(id);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <b>{`[User #${userId}]: `}</b>\n        {title}\n      </div>\n\n      <button\n        type=\"button\"\n        className={cn('PostsList__button button', {\n          active: id === selectedPostId,\n        })}\n        onClick={onClick}\n      >\n        {isClicked ? 'Close' : 'Open'}\n      </button>\n    </>\n  );\n};\n\nPostsListItem.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    userId: PropTypes.number,\n    id: PropTypes.number,\n  }),\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number,\n};\n\nPostsListItem.defaultProps = {\n  post: [],\n  selectedPostId: 0,\n};\n","/* eslint-disable arrow-body-style */\nexport const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const request = (url, options) => {\n  return fetch(`${BASE_URL}${url}`, options).then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status}`);\n    }\n\n    return res.json();\n  });\n};\n","/* eslint-disable comma-dangle */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable arrow-parens */\nimport { request } from './api';\n\nexport const getUserPosts = (userId) => {\n  if (userId === '0') {\n    return request(`posts`).then((res) => res.data);\n  }\n\n  return request(`posts`).then((res) =>\n    res.data.filter((post) => post.userId === Number(userId))\n  );\n};\n\nexport const getPostDetails = (postId) =>\n  request(`posts/${postId}`).then((res) => res.data);\n\nexport const getPostComments = (postId) =>\n  request(`comments`).then((res) =>\n    res.data.filter((comment) => comment.postId === postId)\n  );\n","/* eslint-disable arrow-body-style */\n/* eslint-disable comma-dangle */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\n/* eslint-disable arrow-parens */\nimport React, { useEffect, useState } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nimport { PostsListItem } from '../PostListItem';\n\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = (props) => {\n  const [posts, setPosts] = useState([]);\n  const { userId, setSelectedPostId, selectedPostId } = props;\n\n  useEffect(() => {\n    getUserPosts(userId).then((res) => setPosts(res));\n  }, []);\n\n  useEffect(() => {\n    getUserPosts(userId).then((res) => setPosts(res));\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.length > 0\n          ? posts.map((item) => (\n              <li key={item.id} className=\"PostsList__item\">\n                <PostsListItem\n                  post={item}\n                  setSelectedPostId={setSelectedPostId}\n                  selectedPostId={selectedPostId}\n                />\n              </li>\n            ))\n          : 'no posts'}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.string,\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number,\n};\n\nPostsList.defaultProps = {\n  userId: '',\n  selectedPostId: 0,\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button type=\"submit\" className=\"NewCommentForm__submit-button button\">\n      Add a comment\n    </button>\n  </form>\n);\n","/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\n/* eslint-disable arrow-parens */\n/* eslint-disable arrow-body-style */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostDetails.scss';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails, getPostComments } from '../../api/posts';\n\nexport const PostDetails = (props) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [isShownComments, setIsShownComments] = useState(true);\n  const { selectedPostId } = props;\n\n  useEffect(() => {\n    if (selectedPostId) {\n      getPostDetails(selectedPostId).then((res) => setPost(res));\n    }\n\n    getPostComments(selectedPostId).then((res) => {\n      setComments(res);\n    });\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      {selectedPostId && post ? (\n        <>\n          <h2>Post details:</h2>\n\n          <section className=\"PostDetails__post\">\n            <p>{post.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setIsShownComments((current) => !current)}\n            >\n              {isShownComments ? 'Hide comments' : 'Show comments'}\n            </button>\n            {isShownComments && (\n              <ul className=\"PostDetails__list\">\n                {comments.length > 0\n                  ? comments.map((item) => (\n                      <li className=\"PostDetails__list-item\" key={item.id}>\n                        <button\n                          type=\"button\"\n                          className=\"PostDetails__remove-button button\"\n                        >\n                          X\n                        </button>\n                        <p>{item.body}</p>\n                      </li>\n                    ))\n                  : 'No comments'}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm />\n            </div>\n          </section>\n        </>\n      ) : (\n        'Select post'\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","/* eslint-disable arrow-parens */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            onChange={(e) => setUserId(e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}